package com.irempamukcu.bootcampfinalproject.data.datasourceimport com.irempamukcu.bootcampfinalproject.data.entity.CartItemsimport com.irempamukcu.bootcampfinalproject.data.entity.Moviesimport com.irempamukcu.bootcampfinalproject.retrofit.MoviesDaoimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.withContext// This Data Source class is created to manage Retrofit database operations related to the "Movies" and "CartItems" entitiesclass MoviesDataSource(var moviesDao: MoviesDao) {    // This function fetches the list of movies from the database.    suspend fun viewMovies(): List<Movies> = withContext(Dispatchers.IO) {        return@withContext moviesDao.viewMovies().movies    }    // This function deletes a movie from the user's cart based on the cart ID and username.    suspend fun deleteMovieFromCart(cartId : Int, userName: String) {        moviesDao.deleteMovieFromCart(cartId, userName)    }    // This function fetches the cart items from the database.    suspend fun viewCart(userName: String) : List<CartItems> = withContext(Dispatchers.IO){        try {            if(userName == "irempamukcu"){                return@withContext moviesDao.viewCart(userName).movie_cart            }else{                return@withContext emptyList()            }        } catch (e: Exception) {            return@withContext emptyList()        }    }    //This function adds a movie to the user's cart with the given details.    suspend fun addMovieToCart(name: String,                               image: String,                               price: Int,                               category: String,                               rating : Double,                               year : Int,                               director : String,                               description : String,                               orderAmount : Int,                               userName : String) {        moviesDao.addMovieToCart(name, image, price, category, rating, year, director, description, orderAmount, userName)    }}